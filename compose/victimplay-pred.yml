# KataGo victimplay training with predictor net.
#
# See https://stackoverflow.com/a/52641495/1337463 for documentation on how to
# run commands with `sh -c`.
#
# Launch command (run from repo root):
# docker-compose -f compose/victimplay-pred.yml --env-file compose/victimplay-pred.env up

version: "3"

services:
  curriculum: &python-base
    image: humancompatibleai/goattack:python
    build:
      context: ..
      dockerfile: ./compose/python/Dockerfile
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
      - type: bind
        source: ${HOST_MODEL_DIR}
        target: /models
        read_only: true
      - type: bind
        source: ${VICTIM_PRED_INIT_WEIGHTS_DIR}
        target: /vpred_init_weights
        read_only: true
    cap_add:
      - SYS_PTRACE
    command: ./go_attack/kubernetes/curriculum.sh /outputs /models

  shuffle-and-export:
    <<: *python-base
    command: ./go_attack/kubernetes/shuffle-and-export.sh /outputs adv

  shuffle-and-export-pred:
    <<: *python-base
    command: ./go_attack/kubernetes/shuffle-and-export.sh /outputs/predictor vpred

  train:
    <<: *python-base
    command: ./go_attack/kubernetes/train.sh /outputs/
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["0"]

  train-pred:
    <<: *python-base
    command: ./go_attack/kubernetes/train.sh /outputs/predictor /vpred_init_weights
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["1"]

  # Base victimplay config. Each service runs on only a single gpu.
  # This is to prevent a bug which sometimes brings the whole server down.
  #
  # We sleep for a bit since we need to wait for dependencies.
  # In particular we need to wait for curriculum to move the active victim into
  # the correct folder, and we need to wait for the train/shuffle scripts to
  # load initial (warmstart) weights if they are specified.
  victimplay-2: &victimplay
    image: humancompatibleai/goattack:cpp
    build:
      context: ..
      dockerfile: ./compose/cpp/Dockerfile
      target: prod
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
    cap_add:
      - SYS_PTRACE
    depends_on:
      - curriculum
      - train
      - train-pred
      - shuffle-and-export
      - shuffle-and-export-pred
    command: >
      sh -c "
        sleep 20 && ./go_attack/kubernetes/victimplay-predictor.sh /outputs
      "
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["2"]

  victimplay-3:
    <<: *victimplay
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["3"]

  victimplay-4:
    <<: *victimplay
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["4"]

  victimplay-5:
    <<: *victimplay
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["5"]

  victimplay-6:
    <<: *victimplay
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["6"]

  victimplay-7:
    <<: *victimplay
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["7"]

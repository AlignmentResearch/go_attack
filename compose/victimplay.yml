# KataGo victimplay training.
# Based off of selfplay training documented at
# https://github.com/lightvector/KataGo/blob/master/SelfplayTraining.md.
#
# See https://stackoverflow.com/a/52641495/1337463 for documentation on how to
# run commands with `sh -c`.
#
# Launch command (run from repo root):
# docker-compose -f compose/victimplay.yml --env-file compose/victimplay.env up

version: "3"

services:
  curriculum:
    image: humancompatibleai/goattack:python
    build:
      context: ..
      dockerfile: ./compose/python/Dockerfile
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
      - type: bind
        source: ${HOST_VICTIMS_DIR}
        target: /victims
        read_only: true
      - type: bind
        source: ${HOST_CONFIG_DIR}
        target: /configs
        read_only: true
    command: >
      sh -c "
        cd /engines/KataGo-custom/python &&
        python curriculum.py \
        -selfplay-dir=/outputs/selfplay \
        -input-models-dir=/victims \
        -output-models-dir=/outputs/victims \
        -config-json-file=${VICTIMPLAY_CURRICULUM_CONFIG} \
        ${VICTIMPLAY_CURRICULUM_EXTRA} &&
        sleep infinity
      "
  evaluate:
    image: humancompatibleai/goattack:cpp
    build:
      context: ..
      dockerfile: ./compose/cpp/Dockerfile
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
    command: /engines/KataGo-custom/cpp/evaluate_loop.sh /outputs
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["0"]

  victimplay:
    image: humancompatibleai/goattack:cpp
    build:
      context: ..
      dockerfile: ./compose/cpp/Dockerfile
      target: prod
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
      - type: bind
        source: ${HOST_CONFIG_DIR}
        target: /configs
        read_only: true
    command: >
      sh -c "
        sleep 5 &&
        mkdir -p /outputs/victims &&
        cd /engines/KataGo-custom &&
        ${VICTIMPLAY_CMD}
      "
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["1", "2", "3", "4", "5", "6", "7"]
    cap_add:
      - SYS_PTRACE
    stop_grace_period: 120s   # Nvidia driver bug workaround

  train:
    image: humancompatibleai/goattack:python
    build:
      context: ..
      dockerfile: ./compose/python/Dockerfile
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
    command: >
      sh -c "
        cd /engines/KataGo-custom/python &&
        ./selfplay/train.sh \
        /outputs/ \
        ${TRAININGNAME} \
        b6c96 \
        ${BATCH_SIZE} \
        main \
        -lr-scale 1.0 \
        -max-train-bucket-per-new-data ${MAX_TRAIN_RATIO}
      "
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["0"]

  shuffle-and-export:
    image: humancompatibleai/goattack:python
    build:
      context: ..
      dockerfile: ./compose/python/Dockerfile
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
    command: >
      sh -c "
        cd /engines/KataGo-custom/python &&
        ./selfplay/shuffle_and_export_loop.sh \
        $NAMEOFRUN \
        /outputs/ \
        ${SCRATCH_DIRECTORY} \
        ${NUM_THREADS} \
        ${BATCH_SIZE} \
        ${USE_GATING} \
        ${SHUFFLE_EXTRA} &&
        sleep infinity
      "
    # shuffle_and_export_loop.sh disowns subprocesses and exits, which is why we
    # sleep at the end so the docker container doesn't exit.

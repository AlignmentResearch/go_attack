# Launches a baseline attack on Leela Zero.
#
# Launch command:
#   ./compose/transfer/launch.sh baseline-attack-vs-leela up
version: "3"

services:
  victim:
    image: humancompatibleai/goattack:leela
    build:
      context: ${HOST_REPO_ROOT}/engines/leela
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
        # Leela takes a minute to do OpenCL tuning on its first run and caches
        # the result. Mounting a host file to the cache at
        # `/root/.local/share/leela-zero/leelaz_opencl_tuning` on the container
        # saves the cache across different launches of the container.
      - type: bind
        source: ${HOST_LEELA_TUNING_FILE}
        target: /root/.local/share/leela-zero/leelaz_opencl_tuning
        read_only: ${ARE_SHARED_FILES_READ_ONLY:-false}
    command: >
      sh -c "
        socat TCP4-LISTEN:80,reuseaddr EXEC:'./run-gtp.sh --verbose' \
        2>&1 | tee --append /outputs/victim.log
      "
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              driver: nvidia
              device_ids: ["${GPU:-0}"]
  baseline_attack:
    image: humancompatibleai/goattack:cpp
    build:
      context: ${HOST_REPO_ROOT}
      dockerfile: ${HOST_REPO_ROOT}/compose/cpp/Dockerfile
      target: prod
    depends_on:
      - victim
    volumes:
      - type: bind
        source: ${HOST_OUTPUT_DIR}
        target: /outputs
      - type: bind
        source: ${HOST_REPO_ROOT}
        target: /go_attack
        read_only: true
    command:
      sh -c "
        python3 -u /go_attack/scripts/baseline_attack.py
        --engine leela
        --executable /engines/connect-to-victim.sh
        --log-dir /outputs/sgfs
        --num-games ${NUM_GAMES}
        --verbose
        2>&1 | tee --append /outputs/attack.log
      "

version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5
  shellcheck: circleci/shellcheck@2.2.4

defaults: &defaults
  docker:
      auth:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD

executors:
  python:
    <<: *defaults
    docker:
      - image: cimg/python:3.8.13
    resource_class: large
    environment:
      SRC_FILES: scripts/ src/ tests/ notebooks/ setup.py
      NUM_CPUS: 4

commands:
  dependencies:
    # You must still manually update the Docker image if any
    # binary (non-Python) dependencies change.
    description: "Check out and update Python dependencies."
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "setup.py" }}

      - run:
          name: install dependencies
          # Only create venv if it's not been restored from cache
          command: "[[ -d /home/circleci/venv ]] || ./ci/build_and_activate_venv.sh /home/circleci/venv"

      - save_cache:
          paths:
            - /home/circleci/venv
          key: v2-dependencies-{{ checksum "setup.py" }}

      - run:
          name: Set PATH to include venv
          command: |
            echo 'export PATH=/home/circleci/venv/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV

      - run:
          name: install go_attack
          command: pip install .

      - run:
          name: print installed packages
          command: pip freeze --all

jobs:
  lint:
    executor: python
    steps:
      - dependencies

      - run:
          name: install shellcheck
          command: |
            curl -Lo /tmp/shellcheck.tar.xz https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.x86_64.tar.xz
            tar -x shellcheck-stable/shellcheck -f /tmp/shellcheck.tar.xz
            mv shellcheck-stable/shellcheck /usr/local/bin/shellcheck
            rm -rf shellcheck-stable
            chmod a+x /usr/local/bin/shellcheck

      - shellcheck/check:
          dir: .
          # Orb invokes shellcheck once per file. shellcheck complains if file
          # includes another file not given on the command line. Ignore this,
          # since they'll just get checked in a separate shellcheck invocation.
          exclude: SC1091

      # Lint a select few files that we maintain (not upstream).
      - run:
          name: flake8
          command: flake8 --version && flake8 -j "${NUM_CPUS}" ${SRC_FILES}

      - run:
          name: black
          command: black --version && black --check --diff ${SRC_FILES}

      - run:
          name: codespell
          command: codespell -I .codespell.skip --skip='*.pyc,*.ipynb' ./python/

  type:
    executor: python
    steps:
      - dependencies

      - run:
          name: pytype
          command: pytype --version && pytype -j "${NUM_CPUS}" ${SRC_FILES[@]}

  unit-test:
    executor: python
    steps:
      - dependencies

      - run:
          name: Memory Monitor
          command: |
            mkdir /tmp/resource-usage
            export FILE=/tmp/resource-usage/memory.txt
            while true; do
              ps -u circleci eo pid,%cpu,%mem,args,uname --sort=-%mem >> $FILE
              echo "----------" >> $FILE
              sleep 1
            done
          background: true

      - run:
          name: run tests
          command: |
            pytest -n ${NUM_CPUS} --cov=/venv/lib/python3.8/site-packages/go_attack \
                   --cov=tests --junitxml=/tmp/test-reports/junit.xml \
                    -vv tests/
            mv .coverage .coverage.go_attack
            coverage combine  # rewrite paths from virtualenv to src/

      - codecov/upload

      - store_artifacts:
          path: /tmp/test-reports
          destination: test-reports

      - store_test_results:
          path: /tmp/test-reports
          unit-test:

      - store_artifacts:
          path: /tmp/resource-usage
          destination: resource-usage

workflows:
  version: 2
  test:
    jobs:
      - lint:
          context:
            - docker-hub-creds
      - type:
          context:
            - docker-hub-creds
      - unit-test:
          context:
            - docker-hub-creds
